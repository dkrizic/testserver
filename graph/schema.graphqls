# GraphQL schema example
#
# https://gqlgen.com/getting-started/

# type Identity is either User or Group
union Identity = User | Group

type User {
  id: String!
  email: String!
  groups(skip:Int = 0,limit:Int = 20): [Group!]
}

type Group {
  id: String!
  name: String!
  users(skip:Int = 0,limit:Int = 20): [User!]
}

# enum for read and write permissions
enum Permission {
  READ
  WRITE
}

type Assignment {
  identity: Identity!
  permission: Permission!
  asset: Asset!
}

type Tag {
  id: String!
  name: String!
  assets(skip:Int = 0,limit:Int = 20): [Asset!]!
}

type Asset {
  id: ID!
  name: String!
  tagValues: [TagValue!]!
}

input Search {
  text: String!
  searchTagName: Boolean! = false
  searchTagValue: Boolean! = false
  searchAssetName: Boolean! = false
}

type SearchResult {
  tag: [Tag!]!
  asset: [Asset!]!
  tagValue: [TagValue!]!
}

type Query {
  tag(id:ID, skip: Int = 0, limit: Int = 10): [Tag!]!
  asset(id:ID, skip: Int = 0, limit: Int = 10): [Asset!]!
  tagValue(id:ID, skip: Int = 0, limit: Int = 10): [TagValue!]!
  search(input: Search!, skip: Int = 0, limit: Int = 10): SearchResult!
  user(id:ID, skip: Int =0, limit: Int = 10): [User!]!
  group(id:ID, skip: Int = 0, limit: Int = 10): [Group!]!
  identity(skip: Int = 0, limit: Int = 10): [Identity!]!
}

type TagValue {
  id: ID!
  tag : Tag!
  asset: Asset!
  value: String!
}

input NewTagValue {
  tagID: ID!
  assetID: ID!
  value: String!
}

input UpdateTagValue {
  id: ID!
  value: String!
}

input DeleteTagValue {
  id: ID!
}

type Mutation {
  createTag(tagName: String!): Tag!
  createAsset(assetName: String!): Asset!
  createTagValue(input: NewTagValue!): TagValue!
  updateTagValue(input: UpdateTagValue!): TagValue!
  deleteTagValue(input: DeleteTagValue!): TagValue!
  addGroup(name: String!): Group!
  addUser(email: String!): User!
  addUsertoGroup(userID: ID!, groupID: ID!): Group!
  removeUserFromGroup(userID: ID!, groupID: ID!): Group!
  assignPermission(identityID: ID!, assetID: ID!, permission: Permission!): Assignment!
  removePermission(identityID: ID!, assetID: ID!): Assignment!
}
